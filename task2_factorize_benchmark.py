import time
from multiprocessing import Pool, cpu_count


def factorize_single(number: int):
    """
    –®—É–∫–∞—î –≤—Å—ñ —á–∏—Å–ª–∞, –Ω–∞ —è–∫—ñ –¥–∞–Ω–µ —á–∏—Å–ª–æ –¥—ñ–ª–∏—Ç—å—Å—è –±–µ–∑ –∑–∞–ª–∏—à–∫—É.
    –ù–∞–ø—Ä–∏–∫–ª–∞–¥: 6 -> [1, 2, 3, 6]
    """
    result = []
    for i in range(1, number + 1):
        if number % i == 0:
            result.append(i)
    return result


def factorize_sync(*numbers):
    """
    –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ (–∑–≤–∏—á–∞–π–Ω–∞) –≤–µ—Ä—Å—ñ—è:
    –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —É—Å—ñ —á–∏—Å–ª–∞ –ø–æ —á–µ—Ä–∑—ñ, –æ–¥–Ω–µ –∑–∞ –æ–¥–Ω–∏–º.
    """
    results = []
    for num in numbers:
        results.append(factorize_single(num))
    return results


def factorize_parallel(*numbers):
    """
    –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è:
    –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –≤—Å—ñ —è–¥—Ä–∞ –ø—Ä–æ—Ü–µ—Å–æ—Ä–∞, —â–æ–± –æ–±—á–∏—Å–ª—é–≤–∞—Ç–∏ –∫—ñ–ª—å–∫–∞ —á–∏—Å–µ–ª –æ–¥–Ω–æ—á–∞—Å–Ω–æ.
    –¶–µ –ø—Ä–∏—Å–∫–æ—Ä—é—î —Ä–æ–±–æ—Ç—É –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –Ω–∞–±–æ—Ä–∞—Ö –¥–∞–Ω–∏—Ö.
    """
    with Pool(cpu_count()) as pool:
        results = pool.map(factorize_single, numbers)
    return results


if __name__ == "__main__":
    # –ß–∏—Å–ª–∞ –∑ –ø—Ä–∏–∫–ª–∞–¥—É –∑ —É–º–æ–≤–∏
    numbers = (128, 255, 99999, 10651060)

    print("üîπ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó...")
    start_time = time.time()
    a, b, c, d = factorize_sync(*numbers)
    sync_time = time.time() - start_time
    print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ –≤–µ—Ä—Å—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞ –∑–∞ {round(sync_time, 4)} —Å–µ–∫—É–Ω–¥")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –≤—Å–µ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ (—Ç–µ—Å—Ç —ñ–∑ –∑–∞–≤–¥–∞–Ω–Ω—è)
    assert a == [1, 2, 4, 8, 16, 32, 64, 128]
    assert b == [1, 3, 5, 15, 17, 51, 85, 255]
    assert c == [1, 3, 9, 41, 123, 271, 369, 813, 2439,
                 11111, 33333, 99999]
    assert d == [1, 2, 4, 5, 7, 10, 14, 20, 28, 35, 70, 140,
                 76079, 152158, 304316, 380395, 532553, 760790,
                 1065106, 1521580, 2130212, 2662765, 5325530, 10651060]

    print("\nüîπ –ó–∞–ø—É—Å–∫ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ—ó –≤–µ—Ä—Å—ñ—ó...")
    start_time = time.time()
    a, b, c, d = factorize_parallel(*numbers)
    parallel_time = time.time() - start_time
    print(f"‚ö° –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –≤–µ—Ä—Å—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞ –∑–∞ {round(parallel_time, 4)} —Å–µ–∫—É–Ω–¥")

    print(f"\nüß† –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ —è–¥–µ—Ä –ø—Ä–æ—Ü–µ—Å–æ—Ä–∞: {cpu_count()}")
    print(f"‚è± –ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–±–ª–∏–∑–Ω–æ —É {round(sync_time / parallel_time, 2)} —Ä–∞–∑(–∏)")